<?php

/**
 * @file
 * Primary module hooks for Localgov Irish Service Catalogue module.
 */

use Drupal\Core\Entity\Display\EntityFormDisplayInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\migrate_tools\MigrateExecutable;
use Drupal\migrate\Plugin\MigrationInterface;
use Drupal\migrate\MigrateMessage;
use Drupal\localgov_irish_service_catalogue\Commands\LocalGovISCImportCommands;


/**
 * Implements hook_modules_installed().
 */
function localgov_irish_service_catalogue_modules_installed($modules) {
  $irish_services = in_array('localgov_irish_service_catalogue', $modules);
  if ($irish_services) {
    \Drupal::service('config.installer')->installOptionalConfig();
    localgov_irish_service_catalogue_optional_fields_settings($irish_services);
  }
}

/**
 * Set form settings for optional Irish council services fields on installation.
 *
 * @param bool $irish_services
 *   If localgov_services is (being) installed.
 */
function localgov_irish_service_catalogue_optional_fields_settings($irish_services) {
  $properties = [
    $properties_services_landing_page = [
      'targetEntityType' => 'node',
      'bundle' => 'localgov_services_landing',
    ],
    $properties_services_sub_landing_page = [
      'targetEntityType' => 'node',
      'bundle' => 'localgov_services_sublanding',
    ],
    $properties_services_page = [
      'targetEntityType' => 'node',
      'bundle' => ['localgov_services_page'],
    ],
  ];

  foreach ($properties as $property) {
    if ($form_displays = \Drupal::entityTypeManager()->getStorage('entity_form_display')->loadByProperties($property)) {
      foreach ($form_displays as $form_display) {
        assert($form_display instanceof EntityFormDisplayInterface);
        if ($irish_services) {
          $entity_reference_fields = [
            'localgov_irish_service_category',
            'localgov_irish_service_topic',
            'localgov_irish_service_municipal',
            'localgov_irish_service_type',
            'localgov_irish_service_user_type',
          ];

          $text_fields = [
            'localgov_irish_service_reference',
            'localgov_irish_service_lgma_id',
          ];

          foreach ($entity_reference_fields as $entity_reference_field) {
            $form_display->setComponent($entity_reference_field, [
              'type' => 'entity_reference_autocomplete',
              'region' => 'content',
              'settings' => [
                'match_operator' => 'CONTAINS',
                'size' => '60',
                'placeholder' => '',
                'match_limit' => 10,
              ],
              'weight' => 51,
            ])->save();
          }

          foreach ($text_fields as $text_field) {
            $form_display->setComponent($text_field, [
              'type' => 'string_textfield',
              'region' => 'content'
            ])->save();
          }

        }
      }
    }
  }
}

function localgov_irish_service_catalogue_get_migrations(){
  // List of migration_ids
  $migration_ids = [
    'localgov_isc_tax_user_type',
    'localgov_isc_tax_type',
    'localgov_isc_tax_category',
    'localgov_isc_tax_topic',
    'localgov_isc_content_service_landing',
    'localgov_isc_content_services',
    'localgov_isc_content_services_ga'
  ];
  return $migration_ids;
}

function localgov_irish_service_catalogue_run_migration($migration_id){
  $migration = \Drupal::service('plugin.manager.migration')->createInstance($migration_id);

  // Run with --update
  $migration->getIdMap()->prepareUpdate();
  $migration->setStatus(MigrationInterface::STATUS_IDLE);

  $executable = new MigrateExecutable($migration, new MigrateMessage());
  $executable->import();
}

function localgov_irish_service_catalogue_run_import() {
  // Import the files
  $importer = new LocalGovISCImportCommands();
  $importer->getItems();

  $migration_ids = localgov_irish_service_catalogue_get_migrations();

  // Run the migrations
  foreach($migration_ids as $migration_id){
    localgov_irish_service_catalogue_run_migration($migration_id);
  }
}

/**
 * Implements hook_cron().
 *
 * We implement hook_cron() to allow data to be fetched and imported.
 * But it will only actually run the task if the admins submit a form and clear a flag.
 *
 */
function localgov_irish_service_catalogue_cron() {

  // We usually don't want to act every time cron runs (which could be every
  // minute) so check a flag to see if the data should be imported.
  $fetch_data = \Drupal::state()->get('localgov_irish_service_catalogue.run_import_next_execution', 0);
  if ($fetch_data) {
    // Run the import
    localgov_irish_service_catalogue_run_import();
    // Reset the flag
    \Drupal::state()->set('localgov_irish_service_catalogue.run_import_next_execution', FALSE);
  }
}